
#define START_STACK_POINTER 0x01000180
#define PROM_START_PC       0x0000633C

; whatever pragma here - this file starts at 0x00000000
.addr 0


.long START_STACK_POINTER
.long PROM_START_PC
.long VEC1
.long VEC2
.long VEC3
.long VEC4
.long VEC3
.long VEC3
.long VEC3
.long VEC5
.long VEC3
.long VEC13
.long VEC6
.long VEC12
.long VEC8
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC9
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC10
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC7
.long VEC11
.long VEC11
.long VEC11
.long VEC11
.long VEC11
.long VEC11
.long VEC11
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.short 0x0007 ; location 0x100.  the n in SAUn.  in this case, 7 = sau7 = dn3500
.short 0x0007 ; aux information.  apparently bit 1 = "log error and crash entry points exist", bit 2 = "M68020-based processor board (DSP90,DN330,DN560)"
.long 0x00002184
.long 0x00002142
.long 0x00002966
.long 0x00002aa0
.long 0x00004780
.long 0x0000219c
.long 0x000005d8
.long 0x00002ab0
.long 0x00002576
.long 0x00002592
.long 0x0000254e
.long 0x00001b44
.long 0x000005cc
.long 0x00000000
.long 0x000016d8
.long 0x00001b76
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6
.long VEC6

; 0x400 here
.long 0x60000244 ; not sure what this one is..  just padding?

VEC1:
	bsr 0x438
	.short 0x4280  ; padding?
VEC2:
	bsr 0x438
	.short 0x4180  ; padding?

VEC3:
	bsr 0x44e
	.short 0x5508  ; padding?
VEC4:
	bsr 0x44e
	.short 0x5a0c  ; padding?
VEC5:
	bsr 0x44e
	.short 0x540c  ; padding?
VEC6:
	bsr 0x44e
	.short 0x4908  ; padding?
VEC7:
	bsr 0x44e
	.short 0x5308  ; padding?
VEC8:
	bsr 0x44e
	.short 0x4608  ; padding?
VEC9:
	bsr 0x44e
	.short 0x4a08  ; padding?
VEC10:
	bsr 0x44e
	.short 0x5008  ; padding?
VEC11:
	bsr 0x44e
	.short 0x4f08  ; padding?
VEC12:
	bsr 0x44e
	.short 0x4f08  ; padding?
VEC13:
	bsr 0x438
	.short 0x4408  ; padding?
	
